#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
测试数字人民币转大写人民币转换器
"""

from rmb_converter_correct import rmb_converter

def test_rmb_converter():
    """测试RMB转换器"""
    test_cases = [
        # 基本测试
        (0, "零元整"),
        (1, "壹元整"),
        (10, "拾元整"),
        (11, "拾壹元整"),
        (100, "壹佰元整"),
        (101, "壹佰零壹元整"),
        (1000, "壹仟元整"),
        (1001, "壹仟零壹元整"),
        (1010, "壹仟零拾元整"),
        (1100, "壹仟壹佰元整"),
        
        # 万位测试
        (10000, "壹万元整"),
        (10001, "壹万零壹元整"),
        (10010, "壹万零拾元整"),
        (10100, "壹万零壹佰元整"),
        (11000, "壹万壹仟元整"),
        (100000, "拾万元整"),
        (1000000, "壹佰万元整"),
        (10000000, "壹仟万元整"),
        
        # 亿位测试
        (100000000, "壹亿元整"),
        (123456789, "壹亿贰仟叁佰肆拾伍万陆仟柒佰捌拾玖元整"),
        
        # 小数测试
        (0.1, "零元壹角"),
        (0.01, "零元零壹分"),
        (0.11, "零元壹角壹分"),
        (1.1, "壹元壹角"),
        (1.01, "壹元零壹分"),
        (1.11, "壹元壹角壹分"),
        (10.1, "拾元壹角"),
        (10.01, "拾元零壹分"),
        (10.11, "拾元壹角壹分"),
        (100.1, "壹佰元壹角"),
        (100.01, "壹佰元零壹分"),
        (100.11, "壹佰元壹角壹分"),
        (1000.1, "壹仟元壹角"),
        (1000.01, "壹仟元零壹分"),
        (1000.11, "壹仟元壹角壹分"),
        
        # 万位小数测试
        (10000.1, "壹万元壹角"),
        (10000.01, "壹万元零壹分"),
        (10000.11, "壹万元壹角壹分"),
        (100000.1, "拾万元壹角"),
        (100000.01, "拾万元零壹分"),
        (100000.11, "拾万元壹角壹分"),
        (1000000.1, "壹佰万元壹角"),
        (1000000.01, "壹佰万元零壹分"),
        (1000000.11, "壹佰万元壹角壹分"),
        (10000000.1, "壹仟万元壹角"),
        (10000000.01, "壹仟万元零壹分"),
        (10000000.11, "壹仟万元壹角壹分"),
        
        # 亿位小数测试
        (100000000.1, "壹亿元壹角"),
        (100000000.01, "壹亿元零壹分"),
        (100000000.11, "壹亿元壹角壹分"),
        (123456789.12, "壹亿贰仟叁佰肆拾伍万陆仟柒佰捌拾玖元壹角贰分"),
    ]
    
    print("开始测试数字人民币转大写人民币转换器...")
    print("=" * 60)
    
    passed = 0
    failed = 0
    
    for i, (input_val, expected) in enumerate(test_cases, 1):
        try:
            result = rmb_converter(input_val)
            if result == expected:
                print(f"✓ 测试 {i:2d}: {input_val:>15} -> {result}")
                passed += 1
            else:
                print(f"✗ 测试 {i:2d}: {input_val:>15} -> {result}")
                print(f"  期望: {expected}")
                failed += 1
        except Exception as e:
            print(f"✗ 测试 {i:2d}: {input_val:>15} -> 错误: {e}")
            failed += 1
    
    print("=" * 60)
    print(f"测试完成: 通过 {passed} 个, 失败 {failed} 个")
    
    if failed == 0:
        print("🎉 所有测试通过！")
    else:
        print(f"❌ 有 {failed} 个测试失败")

if __name__ == "__main__":
    test_rmb_converter()